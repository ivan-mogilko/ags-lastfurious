
void SpriteFont::Delete()
{
  int count = this.LastGlyph - this.FirstGlyph + 1;
  int i;
  if (this.Glyphs != null) {
    for (i = 0; i < count; i++) {
      this.Glyphs[i].Delete();
    }
  }
  this.Glyphs = null;
  this.Offs = null;
  this.Widths = null;
}

void SpriteFont::CreateFromSprite(DynamicSprite *sprite, int gl_width, int height, int gl_first, int gl_last, int offs[], int widths[])
{
  this.Delete();
  
  int sprw = sprite.Width;
  int sprh = sprite.Height;
  int in_row = sprw / gl_width;
  int total = in_row * (sprh / height);
  
  total = Maths.Min(total, gl_last - gl_first + 1);
  //Display("Total: %d",total);
  if (total <= 0)
    return;
  
  this.Glyphs = new DynamicSprite[total];
  this.FirstGlyph = gl_first;
  this.LastGlyph = gl_last;
  this.GlyphWidth = gl_width;
  this.Height = height;
  
  int i;
  if (offs != null) {
    this.Offs = offs;
  } else {
    this.Offs = new int[total];
    for (i = 0; i < total; i++) {
      this.Offs[i] = 0;
    }
  }
  if (widths != null) {
    this.Widths = widths;
  } else {
    this.Widths = new int[total];
    for (i = 0; i < total; i++) {
      this.Widths[i] = gl_width;
    }
  }
  
  int x, y;
  int gl = gl_first;
  DrawingSurface *ds = sprite.GetDrawingSurface();
  for (y = 0; y < sprh && gl <= gl_last; y = y + height) {
    for (x = 0; x < sprw && gl <= gl_last; x = x + gl_width) {
      //Display("Cut glyph %d: %d,%d -- %d,%d", gl, x + this.Offs[gl], y, this.Widths[gl], height);
      DynamicSprite *spr = DynamicSprite.CreateFromDrawingSurface(ds, x + this.Offs[gl], y, this.Widths[gl], height);
      this.Glyphs[gl] = spr;
      gl++;
    }
  }
  ds.Release();
}

void SpriteFont::DrawText(String s, DrawingSurface *ds, int x, int y)
{
  if (this.Glyphs == null)
    return;
  int i;
  for (i = 0; i < s.Length; i++) {
    int gl = s.Chars[i];
    if (gl >= this.FirstGlyph && gl <= this.LastGlyph) {
      ds.DrawImage(x, y, this.Glyphs[gl].Graphic);
      x += this.Widths[gl];
    }
  }
}

int SpriteFont::GetTextWidth(String s)
{
  if (this.Glyphs == null)
    return 0;
  int width;
  int i;
  for (i = 0; i < s.Length; i++) {
    int gl = s.Chars[i];
    if (gl >= this.FirstGlyph && gl <= this.LastGlyph) {
      width += this.Widths[gl];
    }
  }
  return width;
}

void SpriteFont::DrawTextCentered(String s, DrawingSurface *ds, int x, int y, int width)
{
  int textw = this.GetTextWidth(s);
  this.DrawText(s, ds, x + (width - textw) / 2, y);
}
